# main.yml
# automatic testing for chronos

# https://github.com/latex3/hyperref/blob/adc36adbc3650db73329469b43afb0ee86e3c807/.github/workflows/main.yaml
# https://github.com/josephwright/siunitx/blob/main/.github/workflows/main.yaml

name: Automatic Checks for chronos

on:
  push:
    branches: 
      - "*"
    tags:
      - "*"
    paths:
      - '**'
      - '!**.md'
      - '!**.txt'
      - '!.github/workflows/*.yml'
      - '!.github/actions/**'
      - '.github/workflows/main.yml'
      - '!licences/**'
      - '!test/**'
  pull_request:
    branches: 
      - "*"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # addaswyd o https://github.com/latex3/latex2e/blob/develop/.github/workflows/main.yaml
  # update TL tree if needed
  texlive-cache:
    runs-on: ubuntu-latest
    name: Update TeX Live cache
    outputs: 
      cache_key: ${{ steps.texlive.outputs.cache_key }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install TeX Live
        id: texlive
        uses: zauguin/install-texlive@v4
        with:
          package_file: .github/tl_packages

  chronos:
    # don't run if previous job failed (default)
    runs-on: ubuntu-latest
    name: "Test build: chronos"
    needs: texlive-cache
    outputs:
      ctan_chronos_output: ${{ steps.build.outputs.ctan_ret }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Build ctan
        id: build 
        # uses: cfr42/nfssext/.github/actions/nfssext-autocheck-action@0c64d7e74dac45271b04904fda6ceedc162d476f
        uses: cfr42/nfssext/.github/actions/nfssext-autocheck-action@0a96ab2a01797c8e846f99b51be56924e3133ebaa
        with:
          ctan: true
          # https://github.com/josephwright/siunitx/blob/549cad913591b92a3a199b7477a325866303bf29/.github/workflows/main.yaml
          # We need Ghostscript for XeTeX tests.
          extra_packages: ghostscript python3-pdfrw
          manifest: true
          module: chronos
          # release: ${{ startsWith(github.ref, 'refs/tags/') }}
          release: ${{ contains(github.ref_name, 'chronos-') }}
          tds: false
          texlive_cache_key: ${{ needs.texlive-cache.outputs.cache_key }}
          working_directory: ./
      - name: Save ctan build results
        if: ${{ !cancelled() }}
        id: save-outputs
        shell: bash
        env: 
          checkret: ${{ steps.build.outputs.check_ret }}
          ctanret: ${{ steps.build.outputs.ctan_ret }}
          ctanrelret: ${{ steps.build.outputs.ctanrel_ret }}
          docret: ${{ steps.build.outputs.doc_ret }}
          manifestret: ${{ steps.build.outputs.manifest_ret }}
          releasing: ${{ contains(github.ref_name, 'chronos-') }}
          releaseret: ${{ steps.build.outputs.release_ret }}
        run: |
          allan=0
          [[ $checkret != 0 && $ctanret != 0 ]] && allan=1
          [[ $docret != 0 && $ctanret != 0 ]] && allan=1
          if [ $releasing != "false" ]
          then
            [[ $ctanret == 0 || $ctanrelret == 0 ]] || allan=1
            [[ $releaseret == 0 && $manifestret == 0 ]] || allan=1
          fi
          exit $allan

      # - run: sudo apt-get update && sudo apt-get install ghostscript python3-pdfrw
      # - name: Restore TeX Live from cache
      #   uses: actions/cache/restore@v4
      #   with: 
      #     path: ~/texlive
      #     key: ${{ needs.texlive-cache.outputs.cache_key }}
      #     fail-on-cache-miss: true
      # - name: Set PATH
      #   run: echo $HOME/texlive/bin/x86_64-linux >> $GITHUB_PATH
      # - name: Run tests
      #   run: l3build check
      #   # https://github.com/latex3/hyperref/blob/adc36adbc3650db73329469b43afb0ee86e3c807/.github/workflows/main.yaml
      # - name: Archive failed test output
      #   # what does this do exactly? (runs even if previous fails)
      #   if: ${{ always() }}
      #   uses: zauguin/l3build-failure-artifacts@v1
      #   with:
      #     name: testfiles-chronos
      #     # Decide how long to keep the test output artifact:
      #     # retention-days: 3
      # - name: Create docs
      #   run: l3build doc
      # # if build succeeded, then:
      #   # if not tagging for release, archive the docs
      #   # o/w manifest & recheck & rebuild for ctan & archive the zip if successful
      # - name: Archive docs
      # # https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions
      #   if: ${{ ! startsWith(github.ref, 'refs/tags/') }}
      # # dwyn o https://github.com/latex3/latex2e/blob/develop/.github/workflows/main.yaml
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: docs-chronos
      #     path: ./*.pdf
      #     # Decide how long to keep the test output artefact:
      #     retention-days: 30
      # # - name: Create manifest
      # # # only if releasing (and success)
      #   # if: ${{ startsWith(github.ref, 'refs/tags/') }}
      #   # run: l3build manifest
      # - name: Create upload archive
      # # only if releasing (and success)
      #   if: ${{ startsWith(github.ref, 'refs/tags/') }}
      #   run: l3build ctan
      # - name: Archive release zip
      # # archive only if releasing (and build success)
      #   if: ${{ startsWith(github.ref, 'refs/tags/') }}
      #   # dwyn o https://github.com/latex3/latex2e/blob/develop/.github/workflows/main.yaml
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: ctan-chronos-${{ github.ref_name }}
      #     path: ./*.zip
      #     # Decide how long to keep the test output artefact:
      #     retention-days: 30
