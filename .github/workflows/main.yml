# This is a basic workflow to help you get started with Actions

# https://github.com/latex3/hyperref/blob/adc36adbc3650db73329469b43afb0ee86e3c807/.github/workflows/main.yaml
# https://github.com/josephwright/siunitx/blob/main/.github/workflows/main.yaml

name: Automatic Checks

# Controls when the workflow will run
on:
  push:
    branches: 
      - "*"
    tags:
      - "*"
  pull_request:
    branches: 
      - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  # addaswyd o https://github.com/latex3/latex2e/blob/develop/.github/workflows/main.yaml
  # update TL tree if needed
  texlive-cache:
    runs-on: ubuntu-latest
    name: Update TeX Live cache
    outputs: 
      cache_key: ${{ steps.texlive.outputs.cache_key }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repo
        uses: actions/checkout@v4
      - name: Install TeX Live
        id: texlive
        uses: zauguin/install-texlive@v3
        with:
          # List the required TeX Live packages in a separate file to allow reuse in
          # different workflows.
          package_file: .github/tl_packages

  l3build-ctan:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: texlive-cache
    name: "Built: chronos"

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # https://github.com/josephwright/siunitx/blob/549cad913591b92a3a199b7477a325866303bf29/.github/workflows/main.yaml
      # We need Ghostscript for XeTeX tests.
      - run: sudo apt-get update && sudo apt-get install ghostscript python3-pdfrw
      - name: Restore TeX Live from cache
        uses: actions/cache/restore@v4
        with: 
          path: ~/texlive
          key: ${{ needs.texlive-cache.outputs.cache_key }}
          fail-on-cache-miss: true
      - name: Set PATH
        run: echo $HOME/texlive/bin/x86_64-linux >> $GITHUB_PATH
      - name: Check & compile doc 
        # run: l3build check && l3build doc && l3build manifest
        run: l3build check && l3build doc 
        # https://github.com/latex3/hyperref/blob/adc36adbc3650db73329469b43afb0ee86e3c807/.github/workflows/main.yaml
      - name: Archive failed test output
        # what does this do exactly? (runs even if previous fails)
        if: ${{ always() }}
        uses: zauguin/l3build-failure-artifacts@v1
        with:
          name: testfiles-chronos
          # Decide how long to keep the test output artifact:
          # retention-days: 3
      # if build succeeded, then:
        # if not tagging for release, archive the docs
        # o/w recheck & rebuild for ctan & archive the zip if successful
      - name: Archive docs
        if: ${{ !(contains(github.ref_name, "chronos-[0-9].[0-9]")) }}
      # dwyn o https://github.com/latex3/latex2e/blob/develop/.github/workflows/main.yaml
        uses: actions/upload-artifact@v4
        with:
          name: docs-chronos
          path: ./*.pdf
          # Decide how long to keep the test output artefact:
          retention-days: 30
      - name: Run l3build
      # only if releasing (and build succeeded) 
        if: ${{ contains(github.ref_name, "chronos-[0-9].[0-9]") }}
        run: l3build ctan
      - name: Archive release zip
      # archive only if releasing (and build success)
        if: ${{ contains(github.ref_name, "chronos-[0-9].[0-9]") }}
        # dwyn o https://github.com/latex3/latex2e/blob/develop/.github/workflows/main.yaml
        uses: actions/upload-artifact@v4
        with:
          name: ctan-chronos-${{ github.ref_name }}
          path: ./*.zip
          # Decide how long to keep the test output artefact:
          retention-days: 30
